/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EntryPoint,
  EntryPointInterface,
} from "../../../../@account-abstraction/contracts/core/EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BeforeExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
    ],
    name: "nonceSequenceNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052604051620000129062000055565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b03166080523480156200004957600080fd5b50600160025562000063565b610233806200470883390190565b608051614682620000866000396000818161149c01526132f501526146826000f3fe6080604052600436106101635760003560e01c80638f41ec5a116100c0578063bb9fe6bf11610074578063d6383f9411610059578063d6383f94146104db578063ee219423146104fb578063fc7e286d1461051b57600080fd5b8063bb9fe6bf146104a6578063c23a5cea146104bb57600080fd5b80639b249f69116100a55780639b249f6914610453578063a619353114610473578063b760faf91461049357600080fd5b80638f41ec5a1461041e578063957122ab1461043357600080fd5b8063205c2878116101175780634b1d7cf5116100fc5780634b1d7cf5146102765780635287ce121461029657806370a08231146103d857600080fd5b8063205c28781461023657806335567e1a1461025657600080fd5b80631b2e01b8116101485780631b2e01b8146101ab5780631d732756146101f65780631fad948c1461021657600080fd5b80630396cb60146101785780630bd28e3b1461018b57600080fd5b3661017357610171336105f5565b005b600080fd5b6101716101863660046135c8565b610663565b34801561019757600080fd5b506101716101a636600461361b565b61097e565b3480156101b757600080fd5b506101e36101c6366004613656565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561020257600080fd5b506101e361021136600461386e565b6109c6565b34801561022257600080fd5b50610171610231366004613979565b610b52565b34801561024257600080fd5b506101716102513660046139d0565b610ccf565b34801561026257600080fd5b506101e3610271366004613656565b610e83565b34801561028257600080fd5b50610171610291366004613979565b610ef1565b3480156102a257600080fd5b506103796102b13660046139fc565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b031660009081526020818152604091829020825160a08101845281546dffffffffffffffffffffffffffff80821683526e010000000000000000000000000000820460ff161515948301949094526f0100000000000000000000000000000090049092169282019290925260019091015463ffffffff81166060830152640100000000900465ffffffffffff16608082015290565b6040805182516dffffffffffffffffffffffffffff908116825260208085015115159083015283830151169181019190915260608083015163ffffffff169082015260809182015165ffffffffffff169181019190915260a0016101ed565b3480156103e457600080fd5b506101e36103f33660046139fc565b6001600160a01b03166000908152602081905260409020546dffffffffffffffffffffffffffff1690565b34801561042a57600080fd5b506101e3600181565b34801561043f57600080fd5b5061017161044e366004613a19565b61136c565b34801561045f57600080fd5b5061017161046e366004613a9e565b611469565b34801561047f57600080fd5b506101e361048e366004613af9565b611556565b6101716104a13660046139fc565b6105f5565b3480156104b257600080fd5b50610171611598565b3480156104c757600080fd5b506101716104d63660046139fc565b61171b565b3480156104e757600080fd5b506101716104f6366004613b2e565b611999565b34801561050757600080fd5b50610171610516366004613af9565b611aad565b34801561052757600080fd5b506105a86105363660046139fc565b600060208190529081526040902080546001909101546dffffffffffffffffffffffffffff808316926e010000000000000000000000000000810460ff16926f010000000000000000000000000000009091049091169063ffffffff811690640100000000900465ffffffffffff1685565b604080516dffffffffffffffffffffffffffff96871681529415156020860152929094169183019190915263ffffffff16606082015265ffffffffffff909116608082015260a0016101ed565b6105ff8134611dba565b6001600160a01b03811660008181526020818152604091829020805492516dffffffffffffffffffffffffffff909316835292917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491015b60405180910390a25050565b33600090815260208190526040902063ffffffff82166106ca5760405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c617900000000000060448201526064015b60405180910390fd5b600181015463ffffffff90811690831610156107285760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d650000000060448201526064016106c1565b805460009061075b9034906f0100000000000000000000000000000090046dffffffffffffffffffffffffffff16613bbf565b9050600081116107ad5760405162461bcd60e51b815260206004820152601260248201527f6e6f207374616b6520737065636966696564000000000000000000000000000060448201526064016106c1565b6dffffffffffffffffffffffffffff81111561080b5760405162461bcd60e51b815260206004820152600e60248201527f7374616b65206f766572666c6f7700000000000000000000000000000000000060448201526064016106c1565b6040805160a08101825283546dffffffffffffffffffffffffffff90811682526001602080840182815286841685870190815263ffffffff808b16606088019081526000608089018181523380835296829052908a9020985189549551945189166f01000000000000000000000000000000027fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff9515156e010000000000000000000000000000027fffffffffffffffffffffffffffffffffff0000000000000000000000000000009097169190991617949094179290921695909517865551949092018054925165ffffffffffff16640100000000027fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000909316949093169390931717905590517fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0190610971908490879091825263ffffffff16602082015260400190565b60405180910390a2505050565b33600090815260016020908152604080832077ffffffffffffffffffffffffffffffffffffffffffffffff8516845290915281208054916109be83613bd2565b919050555050565b6000805a9050333014610a1b5760405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c7900000000000000000060448201526064016106c1565b8451604081015160608201518101611388015a1015610a5e577fdeaddead0000000000000000000000000000000000000000000000000000000060005260206000fd5b875160009015610af2576000610a7b846000015160008c86611e90565b905080610af0576000610a8f610800611ea8565b805190915015610aea5784600001516001600160a01b03168a602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201876020015184604051610ae1929190613c5a565b60405180910390a35b60019250505b505b600088608001515a8603019050610b446000838b8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250611ed4915050565b9a9950505050505050505050565b610b5a612208565b8160008167ffffffffffffffff811115610b7657610b7661368b565b604051908082528060200260200182016040528015610baf57816020015b610b9c61353e565b815260200190600190039081610b945790505b50905060005b82811015610c28576000828281518110610bd157610bd1613c73565b60200260200101519050600080610c0c848a8a87818110610bf457610bf4613c73565b9050602002810190610c069190613ca2565b8561225f565b91509150610c1d848383600061244a565b505050600101610bb5565b506040516000907fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972908290a160005b83811015610cb257610ca681888884818110610c7557610c75613c73565b9050602002810190610c879190613ca2565b858481518110610c9957610c99613c73565b6020026020010151612614565b90910190600101610c57565b50610cbd8482612762565b505050610cca6001600255565b505050565b33600090815260208190526040902080546dffffffffffffffffffffffffffff16821115610d3f5760405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c617267650000000000000060448201526064016106c1565b8054610d5c9083906dffffffffffffffffffffffffffff16613ce0565b81547fffffffffffffffffffffffffffffffffffff0000000000000000000000000000166dffffffffffffffffffffffffffff91909116178155604080516001600160a01b03851681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb910160405180910390a26000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610e27576040519150601f19603f3d011682016040523d82523d6000602084013e610e2c565b606091505b5050905080610e7d5760405162461bcd60e51b815260206004820152601260248201527f6661696c656420746f207769746864726177000000000000000000000000000060448201526064016106c1565b50505050565b6001600160a01b038216600090815260016020908152604080832077ffffffffffffffffffffffffffffffffffffffffffffffff8516845290915290819020549082901b7fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016175b92915050565b610ef9612208565b816000805b828110156110a45736868683818110610f1957610f19613c73565b9050602002810190610f2b9190613cf3565b9050366000610f3a8380613d27565b90925090506000610f5160408501602086016139fc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6001600160a01b03821601610fcb5760405162461bcd60e51b815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f7200000000000000000060448201526064016106c1565b6001600160a01b03811615611081576001600160a01b03811663e3563a4f8484610ff86040890189613d8f565b6040518563ffffffff1660e01b81526004016110179493929190613f7a565b60006040518083038186803b15801561102f57600080fd5b505afa925050508015611040575060015b611081576040517f86a9f7500000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016106c1565b61108b8287613bbf565b955050505050808061109c90613bd2565b915050610efe565b5060008167ffffffffffffffff8111156110c0576110c061368b565b6040519080825280602002602001820160405280156110f957816020015b6110e661353e565b8152602001906001900390816110de5790505b506040519091507fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f97290600090a16000805b8481101561120e573688888381811061114557611145613c73565b90506020028101906111579190613cf3565b90503660006111668380613d27565b9092509050600061117d60408501602086016139fc565b90508160005b818110156111f557600089898151811061119f5761119f613c73565b602002602001015190506000806111c28b898987818110610bf457610bf4613c73565b915091506111d28483838961244a565b8a6111dc81613bd2565b9b505050505080806111ed90613bd2565b915050611183565b505050505050808061120690613bd2565b91505061112a565b50600080915060005b85811015611327573689898381811061123257611232613c73565b90506020028101906112449190613cf3565b905061125660408201602083016139fc565b6001600160a01b03167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d60405160405180910390a23660006112988380613d27565b90925090508060005b8181101561130f576112e3888585848181106112bf576112bf613c73565b90506020028101906112d19190613ca2565b8b8b81518110610c9957610c99613c73565b6112ed9088613bbf565b9650876112f981613bd2565b985050808061130790613bd2565b9150506112a1565b5050505050808061131f90613bd2565b915050611217565b506040516000907f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d908290a261135d8682612762565b5050505050610cca6001600255565b8315801561138257506001600160a01b0383163b155b156113cf5760405162461bcd60e51b815260206004820152601960248201527f41413230206163636f756e74206e6f74206465706c6f7965640000000000000060448201526064016106c1565b601481106114475760006113e66014828486614031565b6113ef9161405b565b60601c9050803b6000036114455760405162461bcd60e51b815260206004820152601b60248201527f41413330207061796d6173746572206e6f74206465706c6f796564000000000060448201526064016106c1565b505b60405162461bcd60e51b815260206004820152600060248201526044016106c1565b6040517f570e1a360000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063570e1a36906114d390869086906004016140a3565b6020604051808303816000875af11580156114f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151691906140b7565b6040517f6ca7b8060000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201529091506024016106c1565b60006115618261285b565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b3360009081526020819052604081206001810154909163ffffffff90911690036116045760405162461bcd60e51b815260206004820152600a60248201527f6e6f74207374616b65640000000000000000000000000000000000000000000060448201526064016106c1565b80546e010000000000000000000000000000900460ff166116675760405162461bcd60e51b815260206004820152601160248201527f616c726561647920756e7374616b696e6700000000000000000000000000000060448201526064016106c1565b600181015460009061167f9063ffffffff16426140d4565b6001830180547fffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff1664010000000065ffffffffffff84169081029190911790915583547fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff16845560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602001610657565b33600090815260208190526040902080546f0100000000000000000000000000000090046dffffffffffffffffffffffffffff168061179c5760405162461bcd60e51b815260206004820152601460248201527f4e6f207374616b6520746f20776974686472617700000000000000000000000060448201526064016106c1565b6001820154640100000000900465ffffffffffff166117fd5760405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b65282920666972737400000060448201526064016106c1565b60018201544264010000000090910465ffffffffffff1611156118625760405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f7420647565000000000060448201526064016106c1565b6001820180547fffffffffffffffffffffffffffffffffffffffffffff0000000000000000000016905581547fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff168255604080516001600160a01b03851681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3910160405180910390a26000836001600160a01b03168260405160006040518083038185875af1925050503d8060008114611943576040519150601f19603f3d011682016040523d82523d6000602084013e611948565b606091505b5050905080610e7d5760405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b65000000000000000060448201526064016106c1565b6119a161353e565b6119aa85612874565b6000806119b96000888561225f565b9150915060006119c9838361294e565b90506119d443600052565b60006119e260008a87612614565b90506119ed43600052565b600060606001600160a01b038a1615611a6357896001600160a01b03168989604051611a1a9291906140fa565b6000604051808303816000865af19150503d8060008114611a57576040519150601f19603f3d011682016040523d82523d6000602084013e611a5c565b606091505b5090925090505b8660800151838560200151866040015185856040517f8b7ac9800000000000000000000000000000000000000000000000000000000081526004016106c19695949392919061410a565b611ab561353e565b611abe82612874565b600080611acd6000858561225f565b845160a00151604080518082018252600080825260208083018281526001600160a01b03958616835282825284832080546dffffffffffffffffffffffffffff6f01000000000000000000000000000000918290048116875260019283015463ffffffff9081169094528d51518851808a018a5287815280870188815291909a16875286865288872080549390930490911689529101549091169052835180850190945281845283015293955091935090366000611b8e60408a018a613d8f565b909250905060006014821015611ba5576000611bc0565b611bb3601460008486614031565b611bbc9161405b565b60601c5b604080518082018252600080825260208083018281526001600160a01b03861683529082905292902080546f0100000000000000000000000000000090046dffffffffffffffffffffffffffff1682526001015463ffffffff1690915290915093505050506000611c31868661294e565b9050600081600001519050600060016001600160a01b0316826001600160a01b031614905060006040518060c001604052808b6080015181526020018b6040015181526020018315158152602001856020015165ffffffffffff168152602001856040015165ffffffffffff168152602001611cae8c6060015190565b905290506001600160a01b03831615801590611cd457506001600160a01b038316600114155b15611d80576040805180820182526001600160a01b03851680825282518084018452600080825260208083018281529382528181529085902080546f0100000000000000000000000000000090046dffffffffffffffffffffffffffff1683526001015463ffffffff169092529082015290517ffaecb4e40000000000000000000000000000000000000000000000000000000081526106c1908390899089908c9086906004016141ac565b808686896040517fe0cff05f0000000000000000000000000000000000000000000000000000000081526004016106c1949392919061422c565b6001600160a01b03821660009081526020819052604081208054909190611df29084906dffffffffffffffffffffffffffff16613bbf565b90506dffffffffffffffffffffffffffff811115611e525760405162461bcd60e51b815260206004820152601060248201527f6465706f736974206f766572666c6f770000000000000000000000000000000060448201526064016106c1565b81547fffffffffffffffffffffffffffffffffffff0000000000000000000000000000166dffffffffffffffffffffffffffff919091161790555050565b6000806000845160208601878987f195945050505050565b60603d82811115611eb65750815b604051602082018101604052818152816000602083013e9392505050565b6000805a855190915060009081611eea82612a1a565b60a08301519091506001600160a01b038116611f0957825193506120ed565b8093506000885111156120ed57868202955060028a6002811115611f2f57611f2f614283565b14611fba5760608301516040517fa9a234090000000000000000000000000000000000000000000000000000000081526001600160a01b0383169163a9a2340991611f82908e908d908c906004016142b2565b600060405180830381600088803b158015611f9c57600080fd5b5087f1158015611fb0573d6000803e3d6000fd5b50505050506120ed565b60608301516040517fa9a234090000000000000000000000000000000000000000000000000000000081526001600160a01b0383169163a9a2340991612008908e908d908c906004016142b2565b600060405180830381600088803b15801561202257600080fd5b5087f193505050508015612034575060015b6120ed57612040614312565b806308c379a003612099575061205461432e565b8061205f575061209b565b8b8160405160200161207191906143d6565b60408051601f1981840301815290829052631101335b60e11b82526106c19291600401613c5a565b505b8a604051631101335b60e11b81526004016106c19181526040602082018190526012908201527f4141353020706f73744f70207265766572740000000000000000000000000000606082015260800190565b5a85038701965081870295508589604001511015612156578a604051631101335b60e11b81526004016106c191815260406020808301829052908201527f414135312070726566756e642062656c6f772061637475616c476173436f7374606082015260800190565b60408901518690036121688582611dba565b6000808c600281111561217d5761217d614283565b1490508460a001516001600160a01b031685600001516001600160a01b03168c602001517f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f8860200151858d8f6040516121f0949392919093845291151560208401526040830152606082015260800190565b60405180910390a45050505050505095945050505050565b60028054036122595760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106c1565b60028055565b60008060005a84519091506122748682612a4a565b61227d86611556565b6020860152604081015160608201516080830151171760e087013517610100870135176effffffffffffffffffffffffffffff8111156122ff5760405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f77000000000000000060448201526064016106c1565b60008061230b84612b43565b90506123198a8a8a84612b90565b855160208701519199509193506123309190612e15565b6123865789604051631101335b60e11b81526004016106c1918152604060208201819052601a908201527f4141323520696e76616c6964206163636f756e74206e6f6e6365000000000000606082015260800190565b61238f43600052565b60a08401516060906001600160a01b0316156123b7576123b28b8b8b8587612e63565b975090505b60005a87039050808b60a00135101561241c578b604051631101335b60e11b81526004016106c1918152604060208201819052601e908201527f41413430206f76657220766572696669636174696f6e4761734c696d69740000606082015260800190565b60408a018390528160608b015260c08b01355a8803018a608001818152505050505050505050935093915050565b600080612456856130a2565b91509150816001600160a01b0316836001600160a01b0316146124c55785604051631101335b60e11b81526004016106c19181526040602082018190526014908201527f41413234207369676e6174757265206572726f72000000000000000000000000606082015260800190565b801561251d5785604051631101335b60e11b81526004016106c19181526040602082018190526017908201527f414132322065787069726564206f72206e6f7420647565000000000000000000606082015260800190565b6000612528856130a2565b925090506001600160a01b0381161561258d5786604051631101335b60e11b81526004016106c19181526040602082018190526014908201527f41413334207369676e6174757265206572726f72000000000000000000000000606082015260800190565b811561260b5786604051631101335b60e11b81526004016106c19181526040602082018190526021908201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560608201527f6500000000000000000000000000000000000000000000000000000000000000608082015260a00190565b50505050505050565b6000805a90506000612627846060015190565b905030631d73275661263c6060880188613d8f565b87856040518563ffffffff1660e01b815260040161265d949392919061441b565b6020604051808303816000875af1925050508015612698575060408051601f3d908101601f19168201909252612695918101906144cf565b60015b61275657600060206000803e506000517f215221530000000000000000000000000000000000000000000000000000000081016127215786604051631101335b60e11b81526004016106c1918152604060208201819052600f908201527f41413935206f7574206f66206761730000000000000000000000000000000000606082015260800190565b600085608001515a6127339086613ce0565b61273d9190613bbf565b905061274d886002888685611ed4565b94505050612759565b92505b50509392505050565b6001600160a01b0382166127b85760405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e6566696369617279000000000000000060448201526064016106c1565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612805576040519150601f19603f3d011682016040523d82523d6000602084013e61280a565b606091505b5050905080610cca5760405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e65666963696172790060448201526064016106c1565b6000612866826130f5565b805190602001209050919050565b3063957122ab6128876040840184613d8f565b61289460208601866139fc565b6128a2610120870187613d8f565b6040518663ffffffff1660e01b81526004016128c29594939291906144e8565b60006040518083038186803b1580156128da57600080fd5b505afa9250505080156128eb575060015b61294b576128f7614312565b806308c379a00361293f575061290b61432e565b806129165750612941565b80511561293b57600081604051631101335b60e11b81526004016106c1929190613c5a565b5050565b505b3d6000803e3d6000fd5b50565b6040805160608101825260008082526020820181905291810182905290612974846131c8565b90506000612981846131c8565b82519091506001600160a01b038116612998575080515b602080840151604080860151928501519085015191929165ffffffffffff80831690851610156129c6578193505b8065ffffffffffff168365ffffffffffff1611156129e2578092505b5050604080516060810182526001600160a01b03909416845265ffffffffffff92831660208501529116908201529250505092915050565b60c081015160e082015160009190808203612a36575092915050565b612a4282488301613239565b949350505050565b612a5760208301836139fc565b6001600160a01b0316815260208083013590820152608080830135604083015260a0830135606083015260c0808401359183019190915260e0808401359183019190915261010083013590820152366000612ab6610120850185613d8f565b90925090508015612b36576014811015612b125760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e644461746100000060448201526064016106c1565b612b20601460008385614031565b612b299161405b565b60601c60a0840152610e7d565b600060a084015250505050565b60a081015160009081906001600160a01b0316612b61576001612b64565b60035b60ff16905060008360800151828560600151028560400151010190508360c00151810292505050919050565b60008060005a8551805191925090612bb58988612bb060408c018c613d8f565b613251565b60a0820151612bc343600052565b60006001600160a01b038216612c12576001600160a01b0383166000908152602081905260409020546dffffffffffffffffffffffffffff16888111612c0b57808903612c0e565b60005b9150505b606084015160208a01516040517f3a871cdd0000000000000000000000000000000000000000000000000000000081526001600160a01b03861692633a871cdd929091612c65918f91879060040161451e565b60206040518083038160008887f193505050508015612ca1575060408051601f3d908101601f19168201909252612c9e918101906144cf565b60015b612d3257612cad614312565b806308c379a003612cde5750612cc161432e565b80612ccc5750612ce0565b8b816040516020016120719190614543565b505b8a604051631101335b60e11b81526004016106c19181526040602082018190526016908201527f4141323320726576657274656420286f72204f4f472900000000000000000000606082015260800190565b95506001600160a01b038216612e02576001600160a01b038316600090815260208190526040902080546dffffffffffffffffffffffffffff16808a1115612dc6578c604051631101335b60e11b81526004016106c19181526040602082018190526017908201527f41413231206469646e2774207061792070726566756e64000000000000000000606082015260800190565b81547fffffffffffffffffffffffffffffffffffff000000000000000000000000000016908a90036dffffffffffffffffffffffffffff161790555b5a85039650505050505094509492505050565b6001600160a01b038216600090815260016020908152604080832084821c808552925282208054849167ffffffffffffffff8316919085612e5583613bd2565b909155501495945050505050565b82516060818101519091600091848111612ebf5760405162461bcd60e51b815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e4761730060448201526064016106c1565b60a08201516001600160a01b038116600090815260208190526040902080548784039291906dffffffffffffffffffffffffffff1689811015612f4e578c604051631101335b60e11b81526004016106c1918152604060208201819052601e908201527f41413331207061796d6173746572206465706f73697420746f6f206c6f770000606082015260800190565b8981038260000160006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550826001600160a01b031663f465c77e858e8e602001518e6040518563ffffffff1660e01b8152600401612fbc9392919061451e565b60006040518083038160008887f193505050508015612ffd57506040513d6000823e601f3d908101601f19168201604052612ffa9190810190614588565b60015b61308e57613009614312565b806308c379a00361303a575061301d61432e565b80613028575061303c565b8d816040516020016120719190614614565b505b8c604051631101335b60e11b81526004016106c19181526040602082018190526016908201527f4141333320726576657274656420286f72204f4f472900000000000000000000606082015260800190565b909e909d509b505050505050505050505050565b600080826000036130b857506000928392509050565b60006130c3846131c8565b9050806040015165ffffffffffff164211806130ea5750806020015165ffffffffffff1642105b905194909350915050565b60608135602083013560006131156131106040870187613d8f565b61352b565b905060006131296131106060880188613d8f565b9050608086013560a087013560c088013560e08901356101008a013560006131586131106101208e018e613d8f565b604080516001600160a01b039c909c1660208d01528b81019a909a5260608b019890985250608089019590955260a088019390935260c087019190915260e08601526101008501526101208401526101408084019190915281518084039091018152610160909201905292915050565b60408051606081018252600080825260208201819052918101919091528160a081901c65ffffffffffff8116600003613204575065ffffffffffff5b604080516060810182526001600160a01b03909316835260d09490941c602083015265ffffffffffff16928101929092525090565b6000818310613248578161324a565b825b9392505050565b8015610e7d578251516001600160a01b0381163b156132bc5784604051631101335b60e11b81526004016106c1918152604060208201819052601f908201527f414131302073656e64657220616c726561647920636f6e737472756374656400606082015260800190565b8351606001516040517f570e1a360000000000000000000000000000000000000000000000000000000081526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163570e1a36919061332d90889088906004016140a3565b60206040518083038160008887f115801561334c573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061337191906140b7565b90506001600160a01b0381166133d35785604051631101335b60e11b81526004016106c1918152604060208201819052601b908201527f4141313320696e6974436f6465206661696c6564206f72204f4f470000000000606082015260800190565b816001600160a01b0316816001600160a01b03161461343d5785604051631101335b60e11b81526004016106c191815260406020808301829052908201527f4141313420696e6974436f6465206d7573742072657475726e2073656e646572606082015260800190565b806001600160a01b03163b6000036134a05785604051631101335b60e11b81526004016106c191815260406020808301829052908201527f4141313520696e6974436f6465206d757374206372656174652073656e646572606082015260800190565b60006134af6014828688614031565b6134b89161405b565b60601c9050826001600160a01b031686602001517fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d83896000015160a0015160405161351a9291906001600160a01b0392831681529116602082015260400190565b60405180910390a350505050505050565b6000604051828085833790209392505050565b6040518060a001604052806135a360405180610100016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b6000602082840312156135da57600080fd5b813563ffffffff8116811461324a57600080fd5b803577ffffffffffffffffffffffffffffffffffffffffffffffff8116811461361657600080fd5b919050565b60006020828403121561362d57600080fd5b61324a826135ee565b6001600160a01b038116811461294b57600080fd5b803561361681613636565b6000806040838503121561366957600080fd5b823561367481613636565b9150613682602084016135ee565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810181811067ffffffffffffffff821117156136da576136da61368b565b60405250565b610100810181811067ffffffffffffffff821117156136da576136da61368b565b601f19601f830116810181811067ffffffffffffffff821117156137275761372761368b565b6040525050565b600067ffffffffffffffff8211156137485761374861368b565b50601f01601f191660200190565b600081830361018081121561376a57600080fd5b604051613776816136ba565b8092506101008083121561378957600080fd5b6040519250613797836136e0565b6137a08561364b565b8352602085013560208401526040850135604084015260608501356060840152608085013560808401526137d660a0860161364b565b60a084015260c085013560c084015260e085013560e084015282825280850135602083015250610120840135604082015261014084013560608201526101608401356080820152505092915050565b60008083601f84011261383757600080fd5b50813567ffffffffffffffff81111561384f57600080fd5b60208301915083602082850101111561386757600080fd5b9250929050565b6000806000806101c0858703121561388557600080fd5b843567ffffffffffffffff8082111561389d57600080fd5b818701915087601f8301126138b157600080fd5b81356138bc8161372e565b6040516138c98282613701565b8281528a60208487010111156138de57600080fd5b826020860160208301376000602084830101528098505050506139048860208901613756565b94506101a087013591508082111561391b57600080fd5b5061392887828801613825565b95989497509550505050565b60008083601f84011261394657600080fd5b50813567ffffffffffffffff81111561395e57600080fd5b6020830191508360208260051b850101111561386757600080fd5b60008060006040848603121561398e57600080fd5b833567ffffffffffffffff8111156139a557600080fd5b6139b186828701613934565b90945092505060208401356139c581613636565b809150509250925092565b600080604083850312156139e357600080fd5b82356139ee81613636565b946020939093013593505050565b600060208284031215613a0e57600080fd5b813561324a81613636565b600080600080600060608688031215613a3157600080fd5b853567ffffffffffffffff80821115613a4957600080fd5b613a5589838a01613825565b909750955060208801359150613a6a82613636565b90935060408701359080821115613a8057600080fd5b50613a8d88828901613825565b969995985093965092949392505050565b60008060208385031215613ab157600080fd5b823567ffffffffffffffff811115613ac857600080fd5b613ad485828601613825565b90969095509350505050565b60006101608284031215613af357600080fd5b50919050565b600060208284031215613b0b57600080fd5b813567ffffffffffffffff811115613b2257600080fd5b612a4284828501613ae0565b60008060008060608587031215613b4457600080fd5b843567ffffffffffffffff80821115613b5c57600080fd5b613b6888838901613ae0565b955060208701359150613b7a82613636565b9093506040860135908082111561391b57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610eeb57610eeb613b90565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613c0357613c03613b90565b5060010190565b60005b83811015613c25578181015183820152602001613c0d565b50506000910152565b60008151808452613c46816020860160208601613c0a565b601f01601f19169290920160200192915050565b828152604060208201526000612a426040830184613c2e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1833603018112613cd657600080fd5b9190910192915050565b81810381811115610eeb57610eeb613b90565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1833603018112613cd657600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112613d5c57600080fd5b83018035915067ffffffffffffffff821115613d7757600080fd5b6020019150600581901b360382131561386757600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112613dc457600080fd5b83018035915067ffffffffffffffff821115613ddf57600080fd5b60200191503681900382131561386757600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112613e2957600080fd5b830160208101925035905067ffffffffffffffff811115613e4957600080fd5b80360382131561386757600080fd5b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b6000610160613ea284613e958561364b565b6001600160a01b03169052565b60208301356020850152613eb96040840184613df4565b826040870152613ecc8387018284613e58565b92505050613edd6060840184613df4565b8583036060870152613ef0838284613e58565b925050506080830135608085015260a083013560a085015260c083013560c085015260e083013560e0850152610100808401358186015250610120613f3781850185613df4565b86840383880152613f49848284613e58565b9350505050610140613f5d81850185613df4565b86840383880152613f6f848284613e58565b979650505050505050565b6040808252810184905260006060600586901b830181019083018783805b8981101561401a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa087860301845282357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea18c3603018112613ff8578283fd5b614004868d8301613e83565b9550506020938401939290920191600101613f98565b505050508281036020840152613f6f818587613e58565b6000808585111561404157600080fd5b8386111561404e57600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000813581811691601485101561409b5780818660140360031b1b83161692505b505092915050565b602081526000612a42602083018486613e58565b6000602082840312156140c957600080fd5b815161324a81613636565b65ffffffffffff8181168382160190808211156140f3576140f3613b90565b5092915050565b8183823760009101908152919050565b868152856020820152600065ffffffffffff8087166040840152808616606084015250831515608083015260c060a083015261414960c0830184613c2e565b98975050505050505050565b80518252602081015160208301526040810151151560408301526000606082015165ffffffffffff8082166060860152806080850151166080860152505060a082015160c060a0850152612a4260c0850182613c2e565b60006101408083526141c081840189614155565b9150506141da602083018780518252602090810151910152565b845160608301526020948501516080830152835160a08301529284015160c082015281516001600160a01b031660e0820152908301518051610100830152909201516101209092019190915292915050565b60e08152600061423f60e0830187614155565b9050614258602083018680518252602090810151910152565b8351606083015260208401516080830152825160a0830152602083015160c083015295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000600385106142eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b848252606060208301526143026060830185613c2e565b9050826040830152949350505050565b600060033d111561432b5760046000803e5060005160e01c5b90565b600060443d101561433c5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff816024840111818411171561438a57505050505090565b82850191508151818111156143a25750505050505090565b843d87010160208285010111156143bc5750505050505090565b6143cb60208286010187613701565b509095945050505050565b7f4141353020706f73744f702072657665727465643a200000000000000000000081526000825161440e816016850160208701613c0a565b9190910160160192915050565b60006101c08083526144308184018789613e58565b905084516001600160a01b03808251166020860152602082015160408601526040820151606086015260608201516080860152608082015160a08601528060a08301511660c08601525060c081015160e085015260e08101516101008501525060208501516101208401526040850151610140840152606085015161016084015260808501516101808401528281036101a0840152613f6f8185613c2e565b6000602082840312156144e157600080fd5b5051919050565b6060815260006144fc606083018789613e58565b6001600160a01b03861660208401528281036040840152614149818587613e58565b6060815260006145316060830186613e83565b60208301949094525060400152919050565b7f414132332072657665727465643a20000000000000000000000000000000000081526000825161457b81600f850160208701613c0a565b91909101600f0192915050565b6000806040838503121561459b57600080fd5b825167ffffffffffffffff8111156145b257600080fd5b8301601f810185136145c357600080fd5b80516145ce8161372e565b6040516145db8282613701565b8281528760208486010111156145f057600080fd5b614601836020830160208701613c0a565b6020969096015195979596505050505050565b7f414133332072657665727465643a20000000000000000000000000000000000081526000825161457b81600f850160208701613c0a56fea264697066735822122098a57ba2e9b549af06dbaef8893c370f95d75e242258fa87e64277a880974e9264736f6c63430008110033608060405234801561001057600080fd5b50610213806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100f9565b61006c565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60008061007c601482858761016b565b61008591610195565b60601c90506000610099846014818861016b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100f057600093505b50505092915050565b6000806020838503121561010c57600080fd5b823567ffffffffffffffff8082111561012457600080fd5b818501915085601f83011261013857600080fd5b81358181111561014757600080fd5b86602082850101111561015957600080fd5b60209290920196919550909350505050565b6000808585111561017b57600080fd5b8386111561018857600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156101d55780818660140360031b1b83161692505b50509291505056fea264697066735822122014a4f62d5d0149db4b72c90276959c063f54a3318480dd1d7ffe9d8d27c5481b64736f6c63430008110033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
