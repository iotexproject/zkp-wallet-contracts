/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  EmailGuardian,
  EmailGuardianInterface,
} from "../../src/EmailGuardian";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IDkimVerifier",
        name: "verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "typ",
        type: "string",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "target",
        type: "bytes",
      },
    ],
    name: "subjectHex",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "server",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "email",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "target",
        type: "bytes",
      },
    ],
    name: "validateDKIM",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161123438038061123483398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6111a1806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630ae362d71461004657806317cc915c1461006e5780631fe8c6b614610091575b600080fd5b610059610054366004610c0a565b6100b1565b60405190151581526020015b60405180910390f35b61005961007c366004610cca565b60006020819052908152604090205460ff1681565b6100a461009f366004610da9565b61053c565b6040516100659190610e6c565b60008087876040516100c4929190610e9f565b604080519182900390912060008181526020819052919091205490915060ff1615610150576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f7573656420656d61696c2064617461000000000000000000000000000000000060448201526064015b60405180910390fd5b6001546040517f391c87c800000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063391c87c8906101a9908c908c90600401610eda565b600060405180830381865afa1580156101c6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101ee9190810190610ef6565b905080805190602001208b14610260576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6572726f7220656d61696c206f776e65720000000000000000000000000000006044820152606401610147565b6001546040517f5bf48e3a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690635bf48e3a906102be908f908d908d908d908d90600401610f6d565b602060405180830381865afa1580156102db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ff9190610fa6565b610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f6572726f7220646b696d207369676e61747572650000000000000000000000006044820152606401610147565b6001546040517fa3364fd900000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063a3364fd9906103be908d908d90600401610eda565b600060405180830381865afa1580156103db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104039190810190610ef6565b905061047b6040518060400160405280600281526020017f30310000000000000000000000000000000000000000000000000000000000008152508c88888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061053c92505050565b805190602001208180519060200120146104f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f6572726f7220656d61696c2074797065206f72207461726765740000000000006044820152606401610147565b5050600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915590509998505050505050505050565b606060008251600261054e9190610ff7565b67ffffffffffffffff81111561056657610566610ce3565b6040519080825280601f01601f191660200182016040528015610590576020820181803683370190505b5060408051808201909152601081527f3031323334353637383961626364656600000000000000000000000000000000602082015290915060005b8451811015610743578182518683815181106105e9576105e961100e565b01602001516105fb919060f81c61106c565b8151811061060b5761060b61100e565b01602001517fff00000000000000000000000000000000000000000000000000000000000000168361063e836002610ff7565b8151811061064e5761064e61100e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508182518683815181106106925761069261100e565b01602001516106a4919060f81c611080565b815181106106b4576106b461100e565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016836106e7836002610ff7565b6106f2906001611094565b815181106107025761070261100e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508061073b816110a7565b9150506105cb565b508561074e46610785565b61075787610843565b8460405160200161076b94939291906110df565b604051602081830303815290604052925050509392505050565b606060006107928361086c565b600101905060008167ffffffffffffffff8111156107b2576107b2610ce3565b6040519080825280601f01601f1916602001820160405280156107dc576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846107e657509392505050565b606061086673ffffffffffffffffffffffffffffffffffffffff8316601461094e565b92915050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106108b5577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106108e1576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106108ff57662386f26fc10000830492506010015b6305f5e1008310610917576305f5e100830492506008015b612710831061092b57612710830492506004015b6064831061093d576064830492506002015b600a83106108665760010192915050565b6060600061095d836002610ff7565b610968906002611094565b67ffffffffffffffff81111561098057610980610ce3565b6040519080825280601f01601f1916602001820160405280156109aa576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106109e1576109e161100e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610a4457610a4461100e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000610a80846002610ff7565b610a8b906001611094565b90505b6001811115610b28577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110610acc57610acc61100e565b1a60f81b828281518110610ae257610ae261100e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93610b2181611136565b9050610a8e565b508315610b91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610147565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610bbc57600080fd5b919050565b60008083601f840112610bd357600080fd5b50813567ffffffffffffffff811115610beb57600080fd5b602083019150836020828501011115610c0357600080fd5b9250929050565b600080600080600080600080600060c08a8c031215610c2857600080fd5b8935985060208a01359750610c3f60408b01610b98565b965060608a013567ffffffffffffffff80821115610c5c57600080fd5b610c688d838e01610bc1565b909850965060808c0135915080821115610c8157600080fd5b610c8d8d838e01610bc1565b909650945060a08c0135915080821115610ca657600080fd5b50610cb38c828d01610bc1565b915080935050809150509295985092959850929598565b600060208284031215610cdc57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610d3b57610d3b610ce3565b604052919050565b600067ffffffffffffffff821115610d5d57610d5d610ce3565b50601f01601f191660200190565b6000610d7e610d7984610d43565b610d12565b9050828152838383011115610d9257600080fd5b828260208301376000602084830101529392505050565b600080600060608486031215610dbe57600080fd5b833567ffffffffffffffff80821115610dd657600080fd5b818601915086601f830112610dea57600080fd5b610df987833560208501610d6b565b9450610e0760208701610b98565b93506040860135915080821115610e1d57600080fd5b508401601f81018613610e2f57600080fd5b610e3e86823560208401610d6b565b9150509250925092565b60005b83811015610e63578181015183820152602001610e4b565b50506000910152565b6020815260008251806020840152610e8b816040850160208701610e48565b601f01601f19169190910160400192915050565b8183823760009101908152919050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b602081526000610eee602083018486610eaf565b949350505050565b600060208284031215610f0857600080fd5b815167ffffffffffffffff811115610f1f57600080fd5b8201601f81018413610f3057600080fd5b8051610f3e610d7982610d43565b818152856020838501011115610f5357600080fd5b610f64826020830160208601610e48565b95945050505050565b858152606060208201526000610f87606083018688610eaf565b8281036040840152610f9a818587610eaf565b98975050505050505050565b600060208284031215610fb857600080fd5b81518015158114610b9157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761086657610866610fc8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261107b5761107b61103d565b500490565b60008261108f5761108f61103d565b500690565b8082018082111561086657610866610fc8565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110d8576110d8610fc8565b5060010190565b600085516110f1818460208a01610e48565b855190830190611105818360208a01610e48565b8551910190611118818360208901610e48565b845191019061112b818360208801610e48565b019695505050505050565b60008161114557611145610fc8565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea2646970667358221220fd37bfdf069827939e252e2a1491b4f9b06937fcb7e7c2be3cc134c93e3e736a64736f6c63430008110033";

type EmailGuardianConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmailGuardianConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EmailGuardian__factory extends ContractFactory {
  constructor(...args: EmailGuardianConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    verifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EmailGuardian> {
    return super.deploy(verifier, overrides || {}) as Promise<EmailGuardian>;
  }
  override getDeployTransaction(
    verifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(verifier, overrides || {});
  }
  override attach(address: string): EmailGuardian {
    return super.attach(address) as EmailGuardian;
  }
  override connect(signer: Signer): EmailGuardian__factory {
    return super.connect(signer) as EmailGuardian__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmailGuardianInterface {
    return new utils.Interface(_abi) as EmailGuardianInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EmailGuardian {
    return new Contract(address, _abi, signerOrProvider) as EmailGuardian;
  }
}
