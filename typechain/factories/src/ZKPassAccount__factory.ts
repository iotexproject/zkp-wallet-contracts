/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ZKPassAccount,
  ZKPassAccountInterface,
} from "../../src/ZKPassAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "contract IVerifier",
        name: "aVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "namaHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "passHash",
        type: "uint256",
      },
    ],
    name: "ZKPassAccountInitialized",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nameHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_passHash",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nameHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "passHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_opHash",
        type: "uint256",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610100604052306080527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000160a0523480156200003a57600080fd5b50604051620024b2380380620024b28339810160408190526200005d916200008e565b6001600160a01b0391821660c0521660e052620000cd565b6001600160a01b03811681146200008b57600080fd5b50565b60008060408385031215620000a257600080fd5b8251620000af8162000075565b6020840151909250620000c28162000075565b809150509250929050565b60805160a05160c05160e0516123576200015b6000396000818161027a01526110220152600081816103c2015281816108be0152818161099801528181610e0b01528181611140015281816111fe01528181611245015261156301526000610f900152600081816106da0152818161077001528181610a5c01528181610af20152610c2101526123576000f3fe60806040526004361061016d5760003560e01c806352d1902d116100cb578063b61d27f61161007f578063d087d28811610059578063d087d28814610463578063f172a4ce14610478578063f23a6e611461048e57600080fd5b8063b61d27f6146103e6578063bc197c8114610406578063c399ec881461044e57600080fd5b806361c6ceef116100b057806361c6ceef1461037d578063a13de3891461039d578063b0d691fe146103b357600080fd5b806352d1902d146103485780635b36c66b1461035d57600080fd5b80633659cfe6116101225780634a58db19116101075780634a58db191461030d5780634d44560d146103155780634f1ef2861461033557600080fd5b80633659cfe6146102bf5780633a871cdd146102df57600080fd5b8063150b7a0211610153578063150b7a02146101d557806318dfb3c71461024b5780632b7ac3f31461026b57600080fd5b806223de291461017957806301ffc9a7146101a057600080fd5b3661017457005b600080fd5b34801561018557600080fd5b5061019e6101943660046119de565b5050505050505050565b005b3480156101ac57600080fd5b506101c06101bb366004611a8f565b6104d4565b60405190151581526020015b60405180910390f35b3480156101e157600080fd5b5061021a6101f0366004611ad1565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101cc565b34801561025757600080fd5b5061019e610266366004611b89565b6105b9565b34801561027757600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101cc565b3480156102cb57600080fd5b5061019e6102da366004611bf5565b6106c3565b3480156102eb57600080fd5b506102ff6102fa366004611c12565b610894565b6040519081526020016101cc565b61019e6108ba565b34801561032157600080fd5b5061019e610330366004611c66565b610947565b61019e610343366004611cc1565b610a45565b34801561035457600080fd5b506102ff610c07565b34801561036957600080fd5b5061019e610378366004611da3565b610cd9565b34801561038957600080fd5b506101c0610398366004611dc5565b610eba565b3480156103a957600080fd5b506102ff60025481565b3480156103bf57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061029a565b3480156103f257600080fd5b5061019e610401366004611e11565b6110ab565b34801561041257600080fd5b5061021a610421366004611e61565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561045a57600080fd5b506102ff6110fa565b34801561046f57600080fd5b506102ff6111b1565b34801561048457600080fd5b506102ff60015481565b34801561049a57600080fd5b5061021a6104a9366004611eff565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000148061056757507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806105b357507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6105c161122d565b8281146106155760405162461bcd60e51b815260206004820152601360248201527f77726f6e67206172726179206c656e677468730000000000000000000000000060448201526064015b60405180910390fd5b60005b838110156106bc576106aa85858381811061063557610635611f7b565b905060200201602081019061064a9190611bf5565b600085858581811061065e5761065e611f7b565b90506020028101906106709190611faa565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112b492505050565b806106b48161200f565b915050610618565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300361076e5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161060c565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166107e37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff161461086c5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161060c565b61087581611331565b6040805160008082526020820190925261089191839190611380565b50565b600061089e61154b565b6108a884846115d0565b90506108b3826115fe565b9392505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163460405160006040518083038185875af1925050503d8060008114610934576040519150601f19603f3d011682016040523d82523d6000602084013e610939565b606091505b505090508061089157600080fd5b3033146109965760405162461bcd60e51b815260206004820152600a60248201527f6f6e6c79206f776e657200000000000000000000000000000000000000000000604482015260640161060c565b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b158015610a2957600080fd5b505af1158015610a3d573d6000803e3d6000fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610af05760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161060c565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b657f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610bee5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161060c565b610bf782611331565b610c0382826001611380565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610cb45760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161060c565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b600054610100900460ff1615808015610cf95750600054600160ff909116105b80610d135750303b158015610d13575060005460ff166001145b610d855760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161060c565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610de357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b600183905560028290556040518290849073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016907f55431516e10bd0917ebc953b5940f38069957d016c7c6bd08187700c86d995a890600090a48015610eb557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6000610ec4611928565b610ecc611946565b610ed4611928565b6000806000806000806000808e8e60009061010092610ef59392919061206e565b810190610f029190612098565b6040805180820182529889526020808a019890985280516080810182528082019788526060810196909652958552855180870187529384528387019290925283860192909252835180850190945290835292820192909252919c509a50985060009750610f8096508d955061010094508593508e925061206e915050565b610f89916120ed565b9050610fb57f000000000000000000000000000000000000000000000000000000000000000087612129565b9550600060405180608001604052806002548152602001838152602001610fda6111b1565b81526020018890526040517f5fe8c13b00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635fe8c13b9061105d908890889088908790600401612187565b602060405180830381865afa15801561107a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109e919061222e565b9998505050505050505050565b6110b361122d565b6110f4848484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112b492505050565b50505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015611188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ac9190612250565b905090565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a9060440161116b565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146112b25760405162461bcd60e51b815260206004820152601760248201527f6163636f756e743a206e6f7420456e747279506f696e74000000000000000000604482015260640161060c565b565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516112dd919061228d565b60006040518083038185875af1925050503d806000811461131a576040519150601f19603f3d011682016040523d82523d6000602084013e61131f565b606091505b5091509150816106bc57805160208201fd5b3033146108915760405162461bcd60e51b815260206004820152600a60248201527f6f6e6c79206f776e657200000000000000000000000000000000000000000000604482015260640161060c565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156113b357610eb583611669565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611438575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261143591810190612250565b60015b6114aa5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f742055555053000000000000000000000000000000000000606482015260840161060c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc811461153f5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c65555549440000000000000000000000000000000000000000000000606482015260840161060c565b50610eb5838383611759565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146112b25760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161060c565b60006115e96115e3610140850185611faa565b84610eba565b6115f5575060016105b3565b50600092915050565b80156108915760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d80600081146106bc576040519150601f19603f3d011682016040523d82523d6000602084013e6106bc565b73ffffffffffffffffffffffffffffffffffffffff81163b6116f35760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161060c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6117628361177e565b60008251118061176f5750805b15610eb5576110f483836117cb565b61178781611669565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606108b383836040518060600160405280602781526020016122fb6027913960606000808573ffffffffffffffffffffffffffffffffffffffff1685604051611815919061228d565b600060405180830381855af49150503d8060008114611850576040519150601f19603f3d011682016040523d82523d6000602084013e611855565b606091505b509150915061186686838387611870565b9695505050505050565b606083156118ec5782516000036118e55773ffffffffffffffffffffffffffffffffffffffff85163b6118e55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161060c565b50816118f6565b6118f683836118fe565b949350505050565b81511561190e5781518083602001fd5b8060405162461bcd60e51b815260040161060c91906122a9565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b61195d611928565b8152602001906001900390816119555790505090565b73ffffffffffffffffffffffffffffffffffffffff8116811461089157600080fd5b60008083601f8401126119a757600080fd5b50813567ffffffffffffffff8111156119bf57600080fd5b6020830191508360208285010111156119d757600080fd5b9250929050565b60008060008060008060008060c0898b0312156119fa57600080fd5b8835611a0581611973565b97506020890135611a1581611973565b96506040890135611a2581611973565b955060608901359450608089013567ffffffffffffffff80821115611a4957600080fd5b611a558c838d01611995565b909650945060a08b0135915080821115611a6e57600080fd5b50611a7b8b828c01611995565b999c989b5096995094979396929594505050565b600060208284031215611aa157600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146108b357600080fd5b600080600080600060808688031215611ae957600080fd5b8535611af481611973565b94506020860135611b0481611973565b935060408601359250606086013567ffffffffffffffff811115611b2757600080fd5b611b3388828901611995565b969995985093965092949392505050565b60008083601f840112611b5657600080fd5b50813567ffffffffffffffff811115611b6e57600080fd5b6020830191508360208260051b85010111156119d757600080fd5b60008060008060408587031215611b9f57600080fd5b843567ffffffffffffffff80821115611bb757600080fd5b611bc388838901611b44565b90965094506020870135915080821115611bdc57600080fd5b50611be987828801611b44565b95989497509550505050565b600060208284031215611c0757600080fd5b81356108b381611973565b600080600060608486031215611c2757600080fd5b833567ffffffffffffffff811115611c3e57600080fd5b84016101608187031215611c5157600080fd5b95602085013595506040909401359392505050565b60008060408385031215611c7957600080fd5b8235611c8481611973565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215611cd457600080fd5b8235611cdf81611973565b9150602083013567ffffffffffffffff80821115611cfc57600080fd5b818501915085601f830112611d1057600080fd5b813581811115611d2257611d22611c92565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611d6857611d68611c92565b81604052828152886020848701011115611d8157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060408385031215611db657600080fd5b50508035926020909101359150565b600080600060408486031215611dda57600080fd5b833567ffffffffffffffff811115611df157600080fd5b611dfd86828701611995565b909790965060209590950135949350505050565b60008060008060608587031215611e2757600080fd5b8435611e3281611973565b935060208501359250604085013567ffffffffffffffff811115611e5557600080fd5b611be987828801611995565b60008060008060008060008060a0898b031215611e7d57600080fd5b8835611e8881611973565b97506020890135611e9881611973565b9650604089013567ffffffffffffffff80821115611eb557600080fd5b611ec18c838d01611b44565b909850965060608b0135915080821115611eda57600080fd5b611ee68c838d01611b44565b909650945060808b0135915080821115611a6e57600080fd5b60008060008060008060a08789031215611f1857600080fd5b8635611f2381611973565b95506020870135611f3381611973565b94506040870135935060608701359250608087013567ffffffffffffffff811115611f5d57600080fd5b611f6989828a01611995565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611fdf57600080fd5b83018035915067ffffffffffffffff821115611ffa57600080fd5b6020019150368190038213156119d757600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612067577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000808585111561207e57600080fd5b8386111561208b57600080fd5b5050820193919092039150565b600080600080600080600080610100898b0312156120b557600080fd5b505086359860208801359850604088013597606081013597506080810135965060a0810135955060c0810135945060e0013592509050565b803560208310156105b3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b60008261215f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b8060005b60028110156110f4578151845260209384019390910190600101612168565b61018081016121968287612164565b60408083018660005b60028082106121ae57506121e9565b82518460005b838110156121d25782518252602092830192909101906001016121b4565b50505092840192506020919091019060010161219f565b505050506121fa60c0830185612164565b61010082018360005b6004811015612222578151835260209283019290910190600101612203565b50505095945050505050565b60006020828403121561224057600080fd5b815180151581146108b357600080fd5b60006020828403121561226257600080fd5b5051919050565b60005b8381101561228457818101518382015260200161226c565b50506000910152565b6000825161229f818460208701612269565b9190910192915050565b60208152600082518060208401526122c8816040850160208701612269565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bce344d16c56bfbc10e2b438b888d319ef883fa33b8f6ce61508ca222eae6b4864736f6c63430008110033";

type ZKPassAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKPassAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKPassAccount__factory extends ContractFactory {
  constructor(...args: ZKPassAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    aVerifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZKPassAccount> {
    return super.deploy(
      anEntryPoint,
      aVerifier,
      overrides || {}
    ) as Promise<ZKPassAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    aVerifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, aVerifier, overrides || {});
  }
  override attach(address: string): ZKPassAccount {
    return super.attach(address) as ZKPassAccount;
  }
  override connect(signer: Signer): ZKPassAccount__factory {
    return super.connect(signer) as ZKPassAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKPassAccountInterface {
    return new utils.Interface(_abi) as ZKPassAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKPassAccount {
    return new Contract(address, _abi, signerOrProvider) as ZKPassAccount;
  }
}
