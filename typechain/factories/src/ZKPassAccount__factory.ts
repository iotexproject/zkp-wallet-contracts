/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ZKPassAccount,
  ZKPassAccountInterface,
} from "../../src/ZKPassAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nameHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nameHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523060805234801561001457600080fd5b50604051611e90380380611e9083398101604081905261003391610044565b6001600160a01b031660a052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160a051611db16100df6000396000818161036a0152818161085d015281816108e801528181610e7a01528181610f3801528181610f7f015261125601526000818161068201528181610718015281816109ac01528181610a420152610b710152611db16000f3fe6080604052600436106101475760003560e01c806352d1902d116100c0578063bc197c8111610074578063d087d28811610059578063d087d2881461040b578063f172a4ce14610420578063f23a6e611461043657600080fd5b8063bc197c81146103ae578063c399ec88146103f657600080fd5b80638da5cb5b116100a55780638da5cb5b14610303578063b0d691fe1461035b578063b61d27f61461038e57600080fd5b806352d1902d146102ce5780636910e334146102e357600080fd5b80633659cfe6116101175780634a58db19116100fc5780634a58db19146102935780634d44560d1461029b5780634f1ef286146102bb57600080fd5b80633659cfe6146102455780633a871cdd1461026557600080fd5b806223de291461015357806301ffc9a71461017a578063150b7a02146101af57806318dfb3c71461022557600080fd5b3661014e57005b600080fd5b34801561015f57600080fd5b5061017861016e366004611658565b5050505050505050565b005b34801561018657600080fd5b5061019a610195366004611709565b61047c565b60405190151581526020015b60405180910390f35b3480156101bb57600080fd5b506101f46101ca36600461174b565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101a6565b34801561023157600080fd5b50610178610240366004611803565b610561565b34801561025157600080fd5b5061017861026036600461186f565b61066b565b34801561027157600080fd5b5061028561028036600461188c565b61083c565b6040519081526020016101a6565b610178610859565b3480156102a757600080fd5b506101786102b63660046118e0565b6108e6565b6101786102c936600461193b565b610995565b3480156102da57600080fd5b50610285610b57565b3480156102ef57600080fd5b506101786102fe366004611a1d565b610c29565b34801561030f57600080fd5b506000546103369062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a6565b34801561036757600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610336565b34801561039a57600080fd5b506101786103a9366004611a4d565b610de5565b3480156103ba57600080fd5b506101f46103c9366004611a9d565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561040257600080fd5b50610285610e34565b34801561041757600080fd5b50610285610eeb565b34801561042c57600080fd5b5061028560015481565b34801561044257600080fd5b506101f4610451366004611b3b565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000148061050f57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061055b57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b610569610f67565b8281146105bd5760405162461bcd60e51b815260206004820152601360248201527f77726f6e67206172726179206c656e677468730000000000000000000000000060448201526064015b60405180910390fd5b60005b83811015610664576106528585838181106105dd576105dd611bb7565b90506020020160208101906105f2919061186f565b600085858581811061060657610606611bb7565b90506020028101906106189190611be6565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fee92505050565b8061065c81611c4b565b9150506105c0565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036107165760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084016105b4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661078b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146108145760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f7879000000000000000000000000000000000000000060648201526084016105b4565b61081d8161106b565b6040805160008082526020820190925261083991839190611073565b50565b600061084661123e565b506000610852826112c3565b9392505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163460405160006040518083038185875af1925050503d80600081146108d3576040519150601f19603f3d011682016040523d82523d6000602084013e6108d8565b606091505b505090508061083957600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b15801561097957600080fd5b505af115801561098d573d6000803e3d6000fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610a405760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084016105b4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610ab57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610b3e5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f7879000000000000000000000000000000000000000060648201526084016105b4565b610b478261106b565b610b5382826001611073565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610c045760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016105b4565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b600054610100900460ff1615808015610c495750600054600160ff909116105b80610c635750303b158015610c63575060005460ff166001145b610cd55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016105b4565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610d3357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6001839055600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff8516021790558015610de057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610ded610f67565b610e2e848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fee92505050565b50505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610ec2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee69190611caa565b905090565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610ea5565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610fec5760405162461bcd60e51b815260206004820152601760248201527f6163636f756e743a206e6f7420456e747279506f696e7400000000000000000060448201526064016105b4565b565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516110179190611ce7565b60006040518083038185875af1925050503d8060008114611054576040519150601f19603f3d011682016040523d82523d6000602084013e611059565b606091505b50915091508161066457805160208201fd5b610839610f67565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156110a657610de08361132e565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561112b575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261112891810190611caa565b60015b61119d5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f74205555505300000000000000000000000000000000000060648201526084016105b4565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146112325760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c6555554944000000000000000000000000000000000000000000000060648201526084016105b4565b50610de083838361141e565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610fec5760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e740000000060448201526064016105b4565b80156108395760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d8060008114610664576040519150601f19603f3d011682016040523d82523d6000602084013e610664565b73ffffffffffffffffffffffffffffffffffffffff81163b6113b85760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016105b4565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61142783611443565b6000825111806114345750805b15610de057610e2e8383611490565b61144c8161132e565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606108528383604051806060016040528060278152602001611d556027913960606000808573ffffffffffffffffffffffffffffffffffffffff16856040516114da9190611ce7565b600060405180830381855af49150503d8060008114611515576040519150601f19603f3d011682016040523d82523d6000602084013e61151a565b606091505b509150915061152b86838387611535565b9695505050505050565b606083156115b15782516000036115aa5773ffffffffffffffffffffffffffffffffffffffff85163b6115aa5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105b4565b50816115bb565b6115bb83836115c3565b949350505050565b8151156115d35781518083602001fd5b8060405162461bcd60e51b81526004016105b49190611d03565b73ffffffffffffffffffffffffffffffffffffffff8116811461083957600080fd5b60008083601f84011261162157600080fd5b50813567ffffffffffffffff81111561163957600080fd5b60208301915083602082850101111561165157600080fd5b9250929050565b60008060008060008060008060c0898b03121561167457600080fd5b883561167f816115ed565b9750602089013561168f816115ed565b9650604089013561169f816115ed565b955060608901359450608089013567ffffffffffffffff808211156116c357600080fd5b6116cf8c838d0161160f565b909650945060a08b01359150808211156116e857600080fd5b506116f58b828c0161160f565b999c989b5096995094979396929594505050565b60006020828403121561171b57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461085257600080fd5b60008060008060006080868803121561176357600080fd5b853561176e816115ed565b9450602086013561177e816115ed565b935060408601359250606086013567ffffffffffffffff8111156117a157600080fd5b6117ad8882890161160f565b969995985093965092949392505050565b60008083601f8401126117d057600080fd5b50813567ffffffffffffffff8111156117e857600080fd5b6020830191508360208260051b850101111561165157600080fd5b6000806000806040858703121561181957600080fd5b843567ffffffffffffffff8082111561183157600080fd5b61183d888389016117be565b9096509450602087013591508082111561185657600080fd5b50611863878288016117be565b95989497509550505050565b60006020828403121561188157600080fd5b8135610852816115ed565b6000806000606084860312156118a157600080fd5b833567ffffffffffffffff8111156118b857600080fd5b840161016081870312156118cb57600080fd5b95602085013595506040909401359392505050565b600080604083850312156118f357600080fd5b82356118fe816115ed565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561194e57600080fd5b8235611959816115ed565b9150602083013567ffffffffffffffff8082111561197657600080fd5b818501915085601f83011261198a57600080fd5b81358181111561199c5761199c61190c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156119e2576119e261190c565b816040528281528860208487010111156119fb57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060408385031215611a3057600080fd5b823591506020830135611a42816115ed565b809150509250929050565b60008060008060608587031215611a6357600080fd5b8435611a6e816115ed565b935060208501359250604085013567ffffffffffffffff811115611a9157600080fd5b6118638782880161160f565b60008060008060008060008060a0898b031215611ab957600080fd5b8835611ac4816115ed565b97506020890135611ad4816115ed565b9650604089013567ffffffffffffffff80821115611af157600080fd5b611afd8c838d016117be565b909850965060608b0135915080821115611b1657600080fd5b611b228c838d016117be565b909650945060808b01359150808211156116e857600080fd5b60008060008060008060a08789031215611b5457600080fd5b8635611b5f816115ed565b95506020870135611b6f816115ed565b94506040870135935060608701359250608087013567ffffffffffffffff811115611b9957600080fd5b611ba589828a0161160f565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611c1b57600080fd5b83018035915067ffffffffffffffff821115611c3657600080fd5b60200191503681900382131561165157600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ca3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600060208284031215611cbc57600080fd5b5051919050565b60005b83811015611cde578181015183820152602001611cc6565b50506000910152565b60008251611cf9818460208701611cc3565b9190910192915050565b6020815260008251806020840152611d22816040850160208701611cc3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220dd8a97bf61745a2ae36f34a32b76812acf4d9c1541f054880e7c2f902a7478b864736f6c63430008110033";

type ZKPassAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKPassAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKPassAccount__factory extends ContractFactory {
  constructor(...args: ZKPassAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZKPassAccount> {
    return super.deploy(
      anEntryPoint,
      overrides || {}
    ) as Promise<ZKPassAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, overrides || {});
  }
  override attach(address: string): ZKPassAccount {
    return super.attach(address) as ZKPassAccount;
  }
  override connect(signer: Signer): ZKPassAccount__factory {
    return super.connect(signer) as ZKPassAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKPassAccountInterface {
    return new utils.Interface(_abi) as ZKPassAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKPassAccount {
    return new Contract(address, _abi, signerOrProvider) as ZKPassAccount;
  }
}
